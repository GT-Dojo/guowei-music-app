# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration
require:
  - rubocop-factory_bot
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec

AllCops:
  NewCops: enable
  Exclude:
    - bin/**/*
    - db/schema.rb
    - public/**/*
    - vendor/**/*

# FactoryBot rubocop
# Disabled because it mess up the build strategy defined in the factories
FactoryBot/AssociationStyle:
  Enabled: false

# Metrics rubocop
Metrics/BlockLength:
  Exclude:
    - config/routes.rb

# https://docs.rubocop.org/rubocop/cops_style.html#styledocumentation
Style/Documentation:
  Enabled: false

# Disabled because this restricts the number of let calls, hard to determine the max `let` because its highly dependent
# on the complexity of the tests and variables needed
RSpec/MultipleMemoizedHelpers:
  Enabled: false

# https://docs.rubocop.org/rubocop/cops_style.html#styletrailingcommainhashliteral
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: consistent_comma

RSpec/ExampleLength:

  Enabled: false
RSpec/MultipleExpectations:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

  Enabled: false

